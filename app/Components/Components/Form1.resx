<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhGwAbANU6AEFBQYCAgLi4uB8fH11dXUJCQllZWUVFRVZWVkhISFxcXP+FPEBAQPT09NbW1oOD
        g9ZyN2hoaJqamlFRUXJTQElEQed9PUtLS8DAwEVCQX5+fnNFKlhJQVVIQWQ+KHBwcElJSWU/KFg5JkVD
        Qry8vMbGxlVVVfWAO8/Pz/WBPE9PT+np6VdXV1tKQVRUVG5uboFMLNFzPU00JUZDQm9DKUNCQUdHR1c5
        JlFHQdLS0gAAAAAAAAAAAAAAAAAAAAAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78i
        IGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpu
        czptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDUgNzkuMTYzNDk5LCAyMDE4LzA4
        LzEzLTE2OjQwOjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3Jn
        LzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4
        bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0
        dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0
        cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJhZG9iZTpk
        b2NpZDpwaG90b3Nob3A6MzI2MjkxZDEtMmI0ZS1hNDQxLWJlZjMtZWM4MWY2NDI3MDNmIiB4bXBNTTpE
        b2N1bWVudElEPSJ4bXAuZGlkOjIzOUVCQzE3NkExRjExRUFCMkJDQkREM0RBRDQwMzlFIiB4bXBNTTpJ
        bnN0YW5jZUlEPSJ4bXAuaWlkOjIzOUVCQzE2NkExRjExRUFCMkJDQkREM0RBRDQwMzlFIiB4bXA6Q3Jl
        YXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAyMDE5IChXaW5kb3dzKSI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOmU2ZjkxZGYxLTdkZTAtMGU0Zi1hMmMyLTE3MjNk
        NGI2YmJlOSIgc3RSZWY6ZG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjMyNjI5MWQxLTJi
        NGUtYTQ0MS1iZWYzLWVjODFmNjQyNzAzZiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8
        L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk
        4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmo
        p6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1s
        a2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEw
        Ly4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEAACH5BAkCADoALAAA
        AAAbABsAQAaTQIFwSCwajYCkcslsNnXQaBSQqFoTAKl2uw14uWBoSnrSjqPlsHOdDG+p12x4QK/b73i8
        soCjtAoFHRQcgAUcFB2AghxLOmyPT1xJV5RtblqTcXKXYB+enJxeAZxHpaZDeamqdVoLUq6vsVKQtLW2
        jVC3kZJJCL6/v0qgjgDAwZvDvcCWw1PGyM3ETNFdX9TVo5dBACH5BAkCADoALAAAAAAbABsAQAaCQIFw
        SCwajYCkcslsNnXQaDR5qFaT0qxWG+huv9CFVDwug5fW9FUJ1jrbg7h8Tq/Xnfg8W89fngFqa21bVGlY
        g2BdAYiIiohHkJFDdpSVclkWMVEWmFKcUn2hoqOgo2xtSQaqq6uHjKmsqq6MOrCtALRZALG4uaUgwLO+
        UI7DXF6DQQAh+QQJAgA6ACwAAAAAGwAbAEAGnECBcEgsGo06gHLJbDqZuqh0qixYrcqpdrsNeLnaa6FW
        mVkzldF1VMmc02JuVSzOgu86jR4fHfgHMhA0fiIQHn8eECKEhn8DT5CRS1qST3xSAHRYl3J0AJx3XgGg
        eKKXR6ipQ443CzB+IQsbfxsLIbCyjpW7vL1QUb5OeEoKxcbGdpzEx8XJoMvIn6SYzNLTwMLXU6baWtzd
        Ut93QQAh+QQFAgA6ACwAAAAAGwAbAEAGZkCAcEgsGo26pFJ3RC6fUGVgGq1apwHrElBoeokFhtarLWPL
        zK+6+Fyz0ekjHCqfR8/2Kj4P3VvdgAyAa1uDQ2VCBIqLi0J2iYyKjnmQjQB8SQCRl5hxRJ1SVKChWaNJ
        fqConapQQQAh+QQFAgA6ACwFAAEAEQACAEAGE8BJSUcsrlhFYmmiKySJL9vTGQQAIfkEBQIAOgAsBQAB
        ABEABgBABiVAAkpHLBqLKMKx2DAsdY7Hsnl8OCSYqdOIkUQu2uMl8tSRJs8gACH5BAUCADoALAUAAQAR
        AAIAQAYRQJVJRywCAEWiSZVM5lxNYhAAIfkEBQIAOgAsBQABABEABgBABg5AgHBILBqPyKRyyWwugwA7
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhGwAbAOZPAEFBQYCAgLi4uF1dXR8fH0JCQlZWVkhISFxcXEBAQP+FPPT09FlZWXFxcUtLS2ho
        aNbW1oODg0NBQJqamkRCQHJTQG9SQKxfMUtFQcDAwElEQc/Pz319fVZIQX5+flQ3JnNFKlhJQUszJby8
        vGU/KEVCQVRHQXBwcFVIQUZDQlFRUc6okldXV0RERGBgYOnp6VpaWvWBPPyEPMqrmPKOU6CgoKurq/KP
        VPuEO/WAO0IvJMavoFw7J9Gnjc6pk8qsmVlJQW5ubk5OTkZDQVBGQY+Pj1RUVFtKQaamplc5JoFMLNLS
        0kRCQkdHR1FHQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0
        IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxu
        czp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDUgNzkuMTYz
        NDk5LCAyMDE4LzA4LzEzLTE2OjQwOjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6
        Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJk
        ZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s
        bnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHht
        bG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wTU06T3JpZ2luYWxEb2N1bWVu
        dElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6MzI2MjkxZDEtMmI0ZS1hNDQxLWJlZjMtZWM4MWY2NDI3
        MDNmIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjU2MzNCMDdGNkExRDExRUE4M0IwQzZCMDk0NDBF
        MkE5IiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjU2MzNCMDdFNkExRDExRUE4M0IwQzZCMDk0NDBF
        MkE5IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAyMDE5IChXaW5kb3dzKSI+IDx4
        bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjJkZTI4ZGEyLTVjNGYtYTQ0
        My1iNTZlLTIzZTc5NzE3MzQ4ZiIgc3RSZWY6ZG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9w
        OjMyNjI5MWQxLTJiNGUtYTQ0MS1iZWYzLWVjODFmNjQyNzAzZiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4g
        PC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw
        7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0
        s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4
        d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08
        Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEA
        ACH5BAkCAE8ALAAAAAAbABsAQAefgAKCg4SFhoYAiYqLjI2NT5CRkQAHlZYHAJKam5sBnpygkDGSOZqj
        kaWhjquJoZuUl5mhBLS1tre4uIoFThVHBQUoFSHABSEVKMDCIYtPrM+PnImX1K2umtOxstegJ97c3J4B
        3Ifl5oO56eq1mgqS7u/xktD09fbNkPfR0okG/v//FIFzBgBgwG0D+wG0NnCSQYQNCTKK2OkTxYrjrgUC
        ACH5BAkCAE8ALAAAAAAbABsAQAebgAKCg4SFhoYAiYqLjI2NT5CRkQAFlZYFAJKam5sBnpygkDKSOJqj
        kaWhjquJoZuUl5mhBLS1tre4uImVTBhDlSkYJZYlGCnAwpaZrMyPnLuXsbKuktDK09ScHNvZ2Z4B2Yfi
        44O55ue1mgqS6+zu1c3x8vOKk/SMrokI+/z8rd1P9PXb9w9gQAADCxoMmHAhPHwOJX2L2OkTtUAAIfkE
        CQIATwAsAAAAABsAGwBAB52AAoKDhIWGhgCJiouMjY1PkJGRiQaVlYmSmZqaAZ2bn5AKkqKjpaBPipaq
        l5inmY6nBLKztLW2to65uoqTu7uulKsGra6vqwDFp50Bya7LxYfR0oO0Ohc8siIXH7MfFyLZ27SLRBZA
        iSYWHYodFibo6r7yuajzvpr2vMAAB/3+/sSS8fvXD1mzXgQDHhwI8OCmBhAdfnomkZMnV4EAACH5BAkC
        AE8ALAAAAAAbABsAQAeqgAKCg4SFhoZPiQCLjI2Oj4mRkpIACJaWAJOam5IBnpyUj6KjjpyLl6iLoKtP
        ngGsTwSyBEkKSrIkCiCzIAokuLqzBKTEo5unqKmZsJHIl6rMk6LRnK7UoNashDs3PYIzNCuDPjc/3+GE
        CeoJEhoU6u3v6hQaEvDu6wnF+41P/Pua/jGCtaiAwYMHoUUDgDDhNUUMESq8FtHhQ0keMl7UlG1jpI4e
        W31iFQgAIfkEBQIATwAsAAAAABsAGwBAB26AAIKDhIWGhk+Jik+HiIuPkIoBk5GVlpMBlosABY2ehAUJ
        mp6apZiljJ+qhY+rrKiph7CQsrORp7aVuLmQu5auwAnAq5vDg6WCA8rLy4K2yczKzrnQzQC8iQDR19ix
        hN2SlODhmeOJvuDo3eqQgQAh+QQFAgBPACwFAAEAEQABAEAHDYAtAU+EhUUOhYQBLYEAIfkEBQIATwAs
        BQABABEAAwBABxuAAxtPhIUvLIWEGwOJiUtGjYQNNpELDI02DYEAIfkEBQIATwAsBQACABEABQBABySA
        ExlPhIWGhRkTh4UjKotPDw6LCwyHDg8QEZOVhhEQj0+Uj4EAIfkEBQIATwAsBQABABEAAQBABw2AMDVP
        hIVIQoWENTCBACH5BAUCAE8ALAUAAQARAAMAQAcWgACCg4SFghARhkFNhREQDS6Gki4NgQAh+QQFAgBP
        ACwFAAIAEQAFAEAHD4AAgoOEhYaHiImKi4yHgQA7
</value>
  </data>
</root>